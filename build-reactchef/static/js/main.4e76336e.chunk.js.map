{"version":3,"sources":["components/Ingredient.js","components/IngredientList.js","components/Recipe.js","components/RecipeList.js","components/RecipeIngredientsEdit.js","components/RecipeEdit.js","App.js","index.js"],"names":["Ingredient","name","amount","IngredientList","ingredientElements","ingredients","map","ingredient","id","className","Recipe","props","useContext","RecipeContext","handleRecipeDelete","handleRecipeSelect","cookTime","servings","instructions","onClick","RecipeList","recipes","handleRecipeAdd","recipe","RecipeIngredientsEdit","handleIngredientChange","handleIngredientDelete","handleChange","changes","type","value","onInput","e","target","RecipeEdit","handleRecipeChange","filter","i","undefined","htmlFor","min","parseInt","newIngredient","Date","now","toString","handleIngredientAdd","React","createContext","LOCAL_STORAGE_KEY","sampleRecipes","App","useState","setRecipes","selectedRecipeId","setSelectedRecipeId","selectedRecipe","find","useEffect","recipeJSON","localStorage","getItem","JSON","parse","setItem","stringify","recipeContextValue","newRecipe","newRecipes","index","findIndex","r","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e76336e.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Ingredient({ name, amount }) {\n    return (\n        <>\n            <span>{name}</span>\n            <span>{amount}</span>\n\n        </>\n    )\n}\n","import React from 'react'\nimport Ingredient from './Ingredient'\n\nexport default function IngredientList({ ingredients }) {\n    const ingredientElements = ingredients.map(ingredient => {\n        return <Ingredient key={ingredient.id} {...ingredient}/>\n    })\n    return (\n        <div className=\"ingredient-grid\">\n            {ingredientElements}\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport IngredientList from './IngredientList'\nimport { RecipeContext } from '../App'\n\nexport default function Recipe(props) {\n    const { handleRecipeDelete, handleRecipeSelect } = useContext(RecipeContext)\n    const {\n        id,\n        name, \n        cookTime, \n        servings, \n        instructions,\n        ingredients,\n        \n    } = props\n    \n    return (\n        <div className=\"recipe\">\n            <div className=\"recipe__header\">\n                <h3 className=\"recipe__title\">{name}</h3>\n                <div>\n                    <button className=\"btn btn--primary mr-1\" onClick={() => handleRecipeSelect(id)}>Edit</button>\n                    <button className=\"btn btn--danger\" onClick={() => handleRecipeDelete(id)}>Delete</button>\n                </div>\n            </div>\n            <div className=\"recipe__row\">\n                <span className=\"recipe__label\">Cook Time:</span>\n                <span className=\"recipe__value\">{cookTime}</span>\n            </div>\n            <div className=\"recipe__row\">\n                <span className=\"recipe__label\">Servings:</span>\n                <span className=\"recipe__value\">{servings}</span>\n            </div>\n            <div className=\"recipe__row\">\n                <span className=\"recipe__label\">Instructions:</span>\n                <div className=\"recipe__value recipe__value--instructions recipe__value--indented\">{instructions}</div>\n            </div>\n            <div className=\"recipe__row\">\n                <span className=\"recipe__label\">Ingredients:</span>\n                <div className=\"recipe__value recipe__value--indented\">\n                    <IngredientList ingredients={ingredients} />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport Recipe from './Recipe'\nimport { RecipeContext } from '../App'\n\n\nexport default function RecipeList({ recipes }) {\n    const { handleRecipeAdd } = useContext(RecipeContext)\n    return (\n        <div className=\"recipe-list\">\n        <div>\n           {recipes.map(recipe => {\n               return(\n                <Recipe key={recipe.id}{...recipe} />\n               ) \n           })}\n        </div>\n        <div className=\"recipe-list__add-recipe-btn-container\">\n            <button \n                className=\"btn btn--primary\"\n                onClick={handleRecipeAdd}\n                >\n                    Add Recipe\n            </button>\n        </div>\n        \n        </div>\n    )\n}\n\n","import React from 'react'\n\nexport default function RecipeIngredientsEdit({ ingredient, handleIngredientChange, handleIngredientDelete }) {\n    \n        function handleChange(changes) {\n            handleIngredientChange(ingredient.id, {...ingredient, ...changes})\n        }\n\n    return (\n        <>\n            <input type=\"text\" value={ingredient.name} onInput={(e) => handleChange({ name: e.target.value })} className=\"recipe-edit__input\"/>\n            <input type=\"text\" value={ingredient.amount} onInput={(e) => handleChange({ amount: e.target.value })} className=\"recipe-edit__input\"/>\n            <button className=\"btn btn--danger\" onClick={() => handleIngredientDelete(ingredient.id)}>&times;</button>\n\n        </>\n    )\n}\n","import React, { useContext } from 'react'\nimport RecipeIngredientsEdit from './RecipeIngredientsEdit'\nimport { RecipeContext } from '../App'\n\nexport default function RecipeEdit({ recipe }) {\n    const { handleRecipeChange, handleRecipeSelect } = useContext(RecipeContext)\n\n    function handleChange(changes) {\n        handleRecipeChange(recipe.id, {...recipe, ...changes})\n    }\n\n    function handleIngredientChange(id, ingredient){\n        const newIngredients = [...recipe.ingredients]\n        const index = newIngredients.findIndex(i => i.id === id)\n        newIngredients[index] = ingredient\n        handleChange({ ingredients: newIngredients })\n    }\n\n    function handleIngredientAdd() {\n        const newIngredient = {\n            id:Date.now().toString(),\n            name: '',\n            amount: ''\n        }\n        handleChange({ingredients: [...recipe.ingredients, newIngredient] })\n    }\n\n    function handleIngredientDelete(id) {\n        handleChange({ ingredients: recipe.ingredients.filter(i => i.id !== id)})\n    }\n\n    return (\n        <div className=\"recipe-edit\">\n            <div className=\"recipe-edit__remove-button-container\">\n                <button className=\"btn recipe-edit__remove-button\" onClick={() => handleRecipeSelect(undefined)}>&times;</button>\n            </div>\n            <div className=\"recipe-edit__details-grid\">\n                <label htmlFor=\"name\" className=\"recipe-edit__label\">Name</label>\n                <input type=\"text\" name=\"name\" id=\"name\" className=\"recipe-edit__input\" value={recipe.name} onInput={e => handleChange({ name: e.target.value })}/>\n                <label htmlFor=\"cookTime\" className=\"recipe-edit__label\" >Cook TimecookTime</label>\n                <input type=\"text\" name=\"cookTime\" id=\"cookTime\" className=\"recipe-edit__input\" value={recipe.cookTime}onInput={e => handleChange({ cookTime: e.target.value })}/>\n                <label htmlFor=\"servings\" className=\"recipe-edit__label\">Servings</label>\n                <input type=\"number\" name=\"servings\" id=\"servings\" min=\"1\" className=\"recipe-edit__input\" value={recipe.servings} onInput={e => handleChange({ servings: parseInt(e.target.value) || '' })}/>\n                <label htmlFor=\"instructions\" className=\"recipe-edit__label\">Instructions</label>\n                <textarea name=\"instructions\" id=\"instructions\" className=\"recipe-edit__input\" value={recipe.instructions} onInput={e => handleChange({ instructions: e.target.value })}></textarea>\n            </div>\n            <br />\n            <label className=\"recipe-edit__label\">Ingredients</label>\n            <div className=\"recipe-edit_ingredient-grid\">\n                <div>Name</div>\n                <div>Amount</div>\n                <div></div>\n                {recipe.ingredients.map(ingredient => (\n                    <RecipeIngredientsEdit \n                    key={ingredient.id} \n                    handleIngredientChange={handleChange}\n                    handleIngredientDelete={handleIngredientDelete}\n                    ingredient={ingredient}\n                    />\n                ))}    \n                                               \n            </div>\n            <div className=\"recipe-edit__add-ingredient-btn-container\">\n                <button className=\"btn btn--primary\" onClick={() => handleIngredientAdd()}>Add Ingredient</button>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport RecipeList from './components/RecipeList'\nimport RecipeEdit from './components/RecipeEdit'\nimport './css/app.css'\n// import uuidv4 from 'uuid/v4'\n\nexport const RecipeContext = React.createContext()\nconst LOCAL_STORAGE_KEY = 'reactchef.recipes'\n\nfunction App() {\n  const [recipes, setRecipes] = useState(sampleRecipes)\n  const [selectedRecipeId, setSelectedRecipeId] = useState()\n  const selectedRecipe = recipes.find(recipe => recipe.id === selectedRecipeId)\n \n  useEffect(() => {\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY)\n    if(recipeJSON != null) setRecipes(JSON.parse(recipeJSON))\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(recipes))\n  }, [recipes])\n\n  \n\n  const recipeContextValue = {\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange\n  }\n\n  function handleRecipeSelect(id) {\n    setSelectedRecipeId(id)\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: Date.now().toString(),\n      name: 'New',\n      servings: 1,\n      cookTime: '',\n      instructions: '',\n      ingredients: [\n        { id: Date.now().toString(), name: '', amount: ''}\n      ]\n  \n    }\n    setSelectedRecipeId(newRecipe.id)\n    setRecipes([...recipes, newRecipe])\n  }\n\n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes]\n    const index = newRecipes.findIndex(r => r.id === id)\n    newRecipes[index] = recipe\n    setRecipes(newRecipes)\n  }\n\n  function handleRecipeDelete(id) {\n    if(selectedRecipeId != null && selectedRecipeId === id) {\n      setSelectedRecipeId(undefined)\n    }\n    setRecipes(recipes.filter(recipe => recipe.id !== id))\n  }\n\n\n  return (\n    <RecipeContext.Provider value={recipeContextValue}>\n      <RecipeList recipes={recipes} />\n      {selectedRecipe && <RecipeEdit recipe={selectedRecipe}/>}\n\n    </RecipeContext.Provider>\n      \n  );\n\n  \n}\n\nconst sampleRecipes = [\n  {\n  id: 1,\n  name: 'Plain Chicken',\n  servings: 3,\n  cookTime: '0:45',\n  instructions: \"1. Put salt on chicken\\n2. Put chicken in oven\\n3. Eat chicken\",\n  ingredients: [\n    {\n      id: 1,\n      name: 'Chicken',\n      amount: '2 pounds'\n    },\n    {\n      id: 2,\n      name: 'Salt',\n      amount: '0.5 Tbs'\n    }\n  ]\n  \n},\n  {\n    id: 2,\n    name: 'Plain Pork',\n    servings: 5,\n    cookTime: '0:45',\n    instructions: \"1. Put salt on Paprika\\n2. Put Pork in pot\\n3. Eat Pork\",\n    ingredients: [\n      {\n        id: 1,\n        name: 'Pork',\n        amount: '1 kg'\n      },\n      {\n        id: 2,\n        name: 'Salt',\n        amount: '1 Tbs'\n      }\n    ]\n    },\n\n]\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}